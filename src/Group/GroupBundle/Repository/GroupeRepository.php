<?php

namespace Group\GroupBundle\Repository;

/**
 * GroupeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GroupeRepository extends \Doctrine\ORM\EntityRepository

{
    public function countNumberMember($idgroupe){

        $number = $this->getEntityManager()
            ->createQuery(
                'SELECT COUNT(m.id)
             FROM MainBundle:Member m JOIN m.groupe g
             WHERE g.id IN(:id)'
            )
            ->setParameter('id',$idgroupe)
            ->getSingleScalarResult();


        return $number;
    }

    public function getGroupMember($idgroupe){

        $id = $this->getEntityManager()
            ->createQuery(
                'SELECT (m.id)
             FROM MainBundle:Member m JOIN m.groupe g
             WHERE g.id IN(:id)'
            )
            ->setParameter('id',$idgroupe)
            ->getResult();

            $memberphoto = $this->getEntityManager()
                ->createQuery(
                    'SELECT (m.profilePic)
             FROM MainBundle:Member m
             WHERE m.id IN(:id)'
                )
                ->setParameter('id',array_values($id))
                ->getResult();

        return $memberphoto;
    }

    public function getGroupImg($idgroupe){

        $id = $this->getEntityManager()
            ->createQuery(
                'SELECT (i.name)
             FROM GroupGroupBundle:Image i 
             WHERE i.idGroupe IN(:id)'
            )
            ->setParameter('id',$idgroupe)
            ->getResult();
    return $id;
    }
    
    public function countGroupPhoto($idgroupe){
        $number = $this->getEntityManager()
            ->createQuery(
                'SELECT COUNT(i.id)
             FROM GroupGroupBundle:Image i 
             WHERE i.idGroupe IN(:id)'
            )
            ->setParameter('id',$idgroupe)
            ->getSingleScalarResult();


        return $number;
    }
   /* public function getmemberstring($id){

        $membres = $this->getEntityManager()
            ->createQuery('SELECT g.membres FROM GroupGroupBundle:Groupe g  
                WHERE g.id =:id')
            ->setParameter('id',$id);



        return $membres->getResult();

    }
    public function getmemberlist($list){

        $memberId = explode('-',$list);


        $membres = $this->getEntityManager()
            ->createQuery(
                'SELECT m.nom, m.prenom, m.profilePic
             FROM MainBundle:Member m
             WHERE m.id IN(:id)'
            )
            ->setParameter('id',array_values($memberId))
            ->getResult();


        return $membres;



    }

   /* public function getmembernumber($id){

        $number = $this->getEntityManager()
            ->createQuery(
                'SELECT COUNT(u.id)
             FROM GroupGroupBundle:Groupe g JOIN g.users u
             WHERE g.id IN(:id)'
            )
            ->setParameter('id',$id)
            ->getSingleScalarResult();


        return $number;

    }



    /*public function getmemberphotos($id){

        $number = $this->getEntityManager()
            ->createQuery(
                'SELECT (u.profile_pic)
             FROM GroupGroupBundle:Groupe g JOIN g.users u
             WHERE g.id IN(:id)'
            )
            ->setParameter('id',$id)
            ->setMaxResults(5)
            ->getResult();


        return $number;

    }*/

   /* public function getmemberobygroup($id){

        $number = $this->getEntityManager()
            ->createQuery(
                'SELECT u.profilePic,u.nom,u.prenom
             FROM GroupGroupBundle:Groupe g JOIN g.users u
             WHERE g.id IN(:id)'
            )
            ->setParameter('id',$id)
            ->getResult();
        var_dump($number);


        return $number;

    }*/
    /*public function showautolist($list){

        // eliminer les tirets
        $memberId = explode('/',$list);

        //recuper list de nom associe a chaque id de liste d'amis
        $membres = $this->getEntityManager()
            ->createQuery(
                'SELECT m.username,m.profilePic,m.id
             FROM MainBundle:Member m
             WHERE m.id IN(:id)'
            )

            ->setParameter('id',array_values($memberId))
            ->getResult();
var_dump(array_values($memberId));

        return $membres;

    }*/

    public function search($id){



    }
}
